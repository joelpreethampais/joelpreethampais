# MACsec GCP Discovery Document

## 1. Overview of MACsec

Media Access Control Security (MACsec) is a Layer 2 security protocol that provides point-to-point security on Ethernet links. It ensures:
- Data confidentiality and integrity
- Protection against replay attacks
- Low-latency, hardware-enforced encryption

MACsec is particularly useful for securing communications over physical or virtualized links, such as interconnects or peering connections between on-prem and cloud environments.

## 2. MACsec in Google Cloud Platform (GCP)

### 2.1 Where MACsec is Supported
- Cloud Interconnect (Dedicated Interconnect only): GCP supports MACsec encryption for Dedicated Interconnects (not Partner Interconnects).
- Requires a supported colocation facility and partner or enterprise edge device that supports MACsec.

### 2.2 GCP Implementation Details
- GCP implements MACsec at Layer 2, on physical Dedicated Interconnect links.
- You must enable MACsec during provisioning of the interconnect. It cannot be applied to an existing interconnect retroactively.
- Requires the use of 802.1AE-compliant Customer Edge Devices (CEDs).

## 3. How to Implement MACsec in GCP

### 3.1 Prerequisites
- Dedicated Interconnect provisioned in a supported colocation facility
- CEDs that support MACsec (e.g., Cisco, Juniper, Arista routers)
- GCP service account permissions to configure MACsec
- Initial keying material (CAK/CKN)

### 3.2 Steps
1. Enable MACsec on Dedicated Interconnect during provisioning via Console or Terraform/API.
2. Configure CED (on-prem).
3. Distribute and Secure Keys using secure channel methods like GCP Secret Manager.
4. Monitor link status via GCP's Network Intelligence Center or other monitoring tools.

## 4. Risks and Challenges

| Risk               | Description                                                    | Mitigation                                   |
|--------------------|---------------------------------------------------------------|----------------------------------------------|
| Key exposure       | Manual distribution of CAK/CKN can lead to interception.       | Use GCP Secret Manager + IAM + audit logging. |
| Lack of support    | Only Dedicated Interconnect supports MACsec, not Partner Interconnect. | Plan architecture accordingly.              |
| Hardware dependency| Requires MACsec-capable Customer Edge Devices.                 | Validate hardware compliance upfront.         |
| Downtime risk      | Improper config can cause traffic drop.                        | Test in staging, roll out with validation.   |
| Operational complexity | Manual key rotation can be cumbersome.                        | Use automated scripts or tooling.            |

## 5. Key Security and Rotation

### 5.1 Key Format
- CKN (Connectivity Key Name): 128-bit identifier
- CAK (Connectivity Association Key): 128/256-bit symmetric key

### 5.2 Securing Keys
- Store CAK/CKN in GCP Secret Manager
- Apply strict IAM roles (least privilege)
- Enable audit logging for access tracking
- Use CMEK (Customer Managed Encryption Keys) to encrypt secrets

### 5.3 Key Rotation Best Practices
- Rotate CAKs every 30-90 days or as per policy
- Use automation (Cloud Scheduler + Cloud Functions or Terraform CI/CD)
- Apply versioning to keys in Secret Manager
- Test rotated keys in lower environments first
- Monitor for MACsec renegotiation errors after rotation

## 6. Summary Recommendations
- Plan interconnect topology with MACsec from the start.
- Automate key rotation to minimize risk and overhead.
- Use Secret Manager with access controls for secure key distribution.
- Ensure hardware compatibility and operational readiness before enabling MACsec.
- Consider using GCP logging and monitoring to maintain visibility into MACsec link status.

## 7. On-Prem Edge with Arista DCS-7280CR3MK-32P4S-F

Your on-premise connectivity to Google Cloud uses Arista’s DCS-7280CR3MK-32P4S-F series switches as edge devices interfacing with GCP's Dedicated Interconnect at the colocation facility (PoP).

### 7.1 Overview of the Device
The Arista DCS-7280CR3MK-32P4S-F is part of Arista’s R3 series designed for high-performance data center and edge applications, featuring:
- 32 × 100G QSFP ports (with support for 10/25/40/100GbE breakout)
- MACsec support (IEEE 802.1AE) on supported ports
- Advanced telemetry and programmability (eAPI, gNMI, OpenConfig)

### 7.2 Advantages for MACsec in GCP

| Feature          | Benefit                                                      |
|------------------|--------------------------------------------------------------|
| Hardware MACsec  | Delivers line-rate encryption on supported ports, minimizing performance hit. |
| High port density| Allows scalable expansion for multiple interconnects or dual PoPs. |
| OpenConfig support| Enables integration with GCP or third-party automation and telemetry systems. |
| Redundant design | Front-to-back airflow, dual power supplies, and failover support suitable for production-grade cloud connectivity. |

### 7.3 Limitations and Considerations

| Limitation               | Description                                               | Mitigation                                         |
|--------------------------|-----------------------------------------------------------|----------------------------------------------------|
| MACsec licensing         | May require optional license to enable MACsec on specific ports. | Confirm license SKU coverage with Arista.          |
| Firmware version compatibility | Not all EOS versions support advanced MACsec features like static CAK rotation. | Standardize on a tested EOS version with MACsec stability. |
| Limited MACsec scalability per port | Each port may have limits on the number of simultaneous MACsec sessions. | Validate scale requirements before deploying multiple logical links per port. |
| Manual key provisioning  | Key injection (CAK/CKN) may be manual unless automated via Arista APIs. | Use scripting with Arista eAPI/CLI automation for consistency. |

### 7.4 Best Practices for Arista-GCP MACsec Integration
- Work with Arista TAC to validate EOS version compatibility with GCP’s MACsec implementation.
- Conduct lab validation of CAK/CKN rotation and failover.
- Use out-of-band management to push new key configs safely.
- Monitor MACsec session health using Arista telemetry (e.g., show macsec interface output).
- Schedule regular audits of firmware versions and MACsec config consistency.

## 8. MACsec Configuration in GCP: Console and Terraform

### 8.1 GCP Console Implementation Steps
1. Go to the Cloud Console Interconnect page.
2. Click "Create Interconnect".
3. Choose:
   - Interconnect type: Dedicated
   - Location: Choose the Google POP where your Arista edge is colocated
   - Capacity: 10Gbps / 100Gbps
4. Under Encryption, enable: ✅ MACsec (802.1AE)
5. Enter your Connectivity Key Name (CKN) and Connectivity Association Key (CAK)
   - CKN: Alphanumeric key name
   - CAK: Hex-encoded symmetric key
6. Complete the remaining configuration and click Create.

### 8.2 Terraform Implementation for MACsec

```hcl
resource "google_compute_interconnect" "dedicated_with_macsec" {
  name                 = "interconnect-macsec"
  location             = "europe-west1"
  interconnect_type    = "DEDICATED"
  link_type            = "LINK_TYPE_ETHERNET_100G_LR"
  requested_link_count = 1
  admin_enabled        = true
  noc_contact_email    = "network-ops@example.com"
  customer_name        = "your-company"
  encryption           = "MACSEC"

  macsec {
    pre_shared_keys {
      name = "ckn-example"
      key  = "0123456789ABCDEF0123456789ABCDEF"
    }
  }
}


9.1 Setup MACsec

To enable MACsec on a GCP Dedicated Interconnect, it must be configured during the provisioning phase. After setup, MACsec operates at Layer 2 and ensures that data traversing the interconnect is encrypted and secure.

    Provision the Interconnect via GCP Console or Terraform.

    Enable MACsec during creation (as outlined in previous sections).

    Apply the correct CAK/CKN for key management.

9.2 Enable MACsec

    During Interconnect Creation:

        Ensure encryption = "MACSEC" is set during the interconnect provisioning in Terraform or Console.

        Provide your Connectivity Key Name (CKN) and Connectivity Association Key (CAK).

9.3 Disable MACsec

To disable MACsec after activation, it must be deactivated by removing the MACsec encryption settings. This requires:

    Disabling MACsec during interconnect configuration through GCP Console or Terraform.

    Deleting or changing the keying material (CKN/CAK).

        Be sure to monitor the link closely to ensure no traffic loss after disabling.

10. Fail-Open Behavior
10.1 What is Fail-Open Behavior?

Fail-open behavior in MACsec refers to how the device handles packets when MACsec fails, such as when the encryption keys are not available or when a device cannot establish a secure connection. With fail-open, the traffic continues to flow unencrypted.
